---------------------------------------------------------------
                        Retro from 1st lesson
---------------------------------------------------------------
OOAD:
инкапсуляция
наследование
полиморфизм

Внутренняя модель качества:

гибкость
тестопригодность
понятность

За что боремся:
Инкрементальная архитектура

---------------------------------------------------------------
                                Lesson 2
---------------------------------------------------------------
библиотека fest - для проверок verify
mockito - для моков

Test Doublers:

State-based Testing->
Dummy пустышка
Stub зашиваем своё поведение
Fake например, вместо большой базы берём легковесную, дерби, h2

Interaction-based Testing->
Mock

Integration testing->
Spy (e.g spy(new SavingAccount()) Создаём уже реальный объект, поэтому интеграционный)

jacoco - плагин есть для код кавередж (указан в пом)
pyth - mutation coverage

---------------------------------------------------------------
                                Lesson 3
---------------------------------------------------------------
Spring

1. Lifecycle
1.1 Scope: singleton(default) VS prototype (VS request in Spring MVC)
1.2 Init: eager VS lazy

2. Dependency Injection
 Where? + ID

 1 + 2 = DI Container     - Spring core

3. Aspects: via Advises (type of Anotations)
3.1 Authorization + Authentication, e.g. @Authenticated @RolesAllowed("admin")
3.2 Transactions, @Transactional()
3.3 Retry  @Retry(можно указать таймаут и кол-во ретраев)
You can create your own advises

4. Spring boot - помогает конфигурировать, сводит к тому, что мы указываем лишь проперти,
а не пишем большой .xml файл. Смотрит в pom.xml в случае Мавена

--------------------

Spring профили - можем два разных .xml создать для разных профилей с разным набором бинов
(например, прод и юат)

@Service - частый случай @Component, для красоты др.название:)
@Scope("singleton") - можно не указывать тк дефолт
@Lazy(false) - можно не указывать тк дефолт

@Autowired - стандарт анотация
@Inject, @Resource - работает также как @Autowired






